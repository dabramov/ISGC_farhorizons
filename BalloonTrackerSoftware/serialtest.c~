#include <stdio.h>   /* Standard input/output definitions */
#include <string.h>  /* String function definitions */
#include <unistd.h>  /* UNIX standard function definitions */
#include <fcntl.h>   /* File control definitions */
#include <errno.h>   /* Error number definitions */
#include <termios.h> /* POSIX terminal control definitions */

/*
 * 'open_port()' - Open serial port 1.
 *
 * Returns the file descriptor on success or -1 on error.
 */

int open_port(void)
{
  int fd; /* File descriptor for the port */
  
  
  fd = open("/dev/tty.KeySerial1", O_RDWR | O_NOCTTY | O_NDELAY);
  if (fd == -1)
    {
      /*
       * Could not open the port.
       */
      
      perror("open_port: Unable to open /dev/tty.USA19H1d1P1.1 - ");
    }
  else
    fcntl(fd, F_SETFL, 0);
  
  return (fd);
}

int close_port(int fd)
{
  close(fd);
}



int main()
{
  int fd,n,i;
  char linebuff[200];

  fd=open_port();

  /*  fcntl(fd, F_SETFL, FNDELAY);*/
  strcpy(linebuff," ");
  //  for (i=0;strchr(linebuff,'Q')==NULL;i++)
  for (i=0;;)
    {
      n=read(fd,linebuff,10);
      if (n>0){
	linebuff[n]='\0';
	//    printf("||| %d |||\n",n);
	fprintf(stdout,"%s",linebuff);
	fflush(stdout);
      }

    }

  fcntl(fd, F_SETFL, 0);

  close_port(fd);

  return 1;
}
